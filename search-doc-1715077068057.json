{"searchDocs":[{"title":"Adding devices to database","type":0,"sectionRef":"#","url":"/docs/basic-knowledge/adding-devices","content":"","keywords":"","version":"Next"},{"title":"Enter your Wi-Fi data​","type":1,"pageTitle":"Adding devices to database","url":"/docs/basic-knowledge/adding-devices#enter-your-wi-fi-data","content":" Go to devices tab in frontend and click on the settings icon and enter your Wi-Fi data.  ","version":"Next","tagName":"h2"},{"title":"Adding devices​","type":1,"pageTitle":"Adding devices to database","url":"/docs/basic-knowledge/adding-devices#adding-devices","content":" ","version":"Next","tagName":"h2"},{"title":"If your machine supports bluetooth​","type":1,"pageTitle":"Adding devices to database","url":"/docs/basic-knowledge/adding-devices#if-your-machine-supports-bluetooth","content":" After turning on backend and micro-connector it will automatically write Wi-Fi data to devices via bluetooth. After that, devices will be able to communicate with backend by WiFi through micro-connector.  ","version":"Next","tagName":"h3"},{"title":"If your machine doesn't support bluetooth​","type":1,"pageTitle":"Adding devices to database","url":"/docs/basic-knowledge/adding-devices#if-your-machine-doesnt-support-bluetooth","content":" You have to connect to the hotspot created by device. Name of the hotspot will be FkmTimer-XXXX and password will be FkmTimer. After connecting go to 192.168.4.1 and manually enter your wifi data.  ","version":"Next","tagName":"h3"},{"title":"After entering Wi-Fi data​","type":1,"pageTitle":"Adding devices to database","url":"/docs/basic-knowledge/adding-devices#after-entering-wi-fi-data","content":" Click the submit button, and you can easily add devices to the database. They will be displayed in Available devices section in devices tab.   ","version":"Next","tagName":"h3"},{"title":"Assigning cards","type":0,"sectionRef":"#","url":"/docs/basic-knowledge/assigning-cards","content":"","keywords":"","version":"Next"},{"title":"Buy proper cards​","type":1,"pageTitle":"Assigning cards","url":"/docs/basic-knowledge/assigning-cards#buy-proper-cards","content":" You will need to buy RFID cards with 13.56 MHz frequency.  ","version":"Next","tagName":"h2"},{"title":"Assign cards to the competitors​","type":1,"pageTitle":"Assigning cards","url":"/docs/basic-knowledge/assigning-cards#assign-cards-to-the-competitors","content":" Go to the persons tab and click Assign cards button.    Just search the competitor and scan the card you want to assign to them and click enter. Search the next competitor and repeat the process.  ","version":"Next","tagName":"h2"},{"title":"Adding volunteers to the system​","type":1,"pageTitle":"Assigning cards","url":"/docs/basic-knowledge/assigning-cards#adding-volunteers-to-the-system","content":" You can click on the plus button in the persons tab and fill in the form. After that, you can assign a card to them as well. ","version":"Next","tagName":"h2"},{"title":"Accounts","type":0,"sectionRef":"#","url":"/docs/basic-knowledge/accounts","content":"","keywords":"","version":"Next"},{"title":"Creating an account​","type":1,"pageTitle":"Accounts","url":"/docs/basic-knowledge/accounts#creating-an-account","content":" Go to accounts page    Click on the plus button, fill in the form and click create button. Staff member can now log in with these credentials.  You can also delete any account, edit details or change password.  ","version":"Next","tagName":"h2"},{"title":"Access to competition​","type":1,"pageTitle":"Accounts","url":"/docs/basic-knowledge/accounts#access-to-competition","content":" If someone who logs in with WCA account doesn't have access to the competition will obviously not be added to accounts page, you have to add them as delegate/organizer on the WCA website and sync WCIF in competition tab. ","version":"Next","tagName":"h2"},{"title":"How FKMTime works?","type":0,"sectionRef":"#","url":"/docs/basic-knowledge/how-it-works","content":"How FKMTime works? Basically, there are: Backend: Nest.jsFrontend: ReactDatabase: PostgreSQLMicro-connector: RustFKM Devices (PlatformIO) Communication between devices and backend looks like this:","keywords":"","version":"Next"},{"title":"Selecting current event","type":0,"sectionRef":"#","url":"/docs/basic-knowledge/selecting-event","content":"Selecting current event Go to the rooms tab and select the group that will take place now in each room. After selecting, don't forget to click the save button and open this round in WCA Live.","keywords":"","version":"Next"},{"title":"Importing competition","type":0,"sectionRef":"#","url":"/docs/basic-knowledge/importing-competition","content":"Importing competition important It is recommended to import competition after creating groups. To import a competition, you need WCA account with access to the competition you want to import. After first login to the system, you will be redirected to the import page. Just click the green import button and you will be redirected to competition settings page. You will need a scoretaking token that can be taken from WCA Live. Go to the account and generate one. This token is valid for 7 days and specific to the selected competition. Paste the token to the input field and click the save button.","keywords":"","version":"Next"},{"title":"Setup environment","type":0,"sectionRef":"#","url":"/docs/development/dev-environment","content":"","keywords":"","version":"Next"},{"title":"Docker​","type":1,"pageTitle":"Setup environment","url":"/docs/development/dev-environment#docker","content":" Run the following command in the root directory of the project  docker compose -f docker-compose-dev.yml up   Frontend will be accessible at localhost:5173, backend at localhost:5000, database at localhost:5432 and api-tester at localhost:5001  You can read how to setup local WCA server here and how to setup local WCA Live server here  If you want other WCA server than local you have to change WCA_ORIGIN and WCA_LIVE_API_ORIGIN in docker-compose-dev.yml file.  ","version":"Next","tagName":"h2"},{"title":"Running backend and frontend separately​","type":1,"pageTitle":"Setup environment","url":"/docs/development/dev-environment#running-backend-and-frontend-separately","content":" Requirements​  NodeJS (version 19.0.0 or later)PostgreSQL  Setup database​  Install PostgreSQLCreate a database  CREATE DATABASE fkm_time;   Backend​  Navigate into backend directory  cd backend   Install dependencies  npm install   Create .env file and enter database URL, JWT secret and WCA and WCA Live URL  PORT=5000 DATABASE_URL=postgres://postgres@localhost:5432/fkm_time SECRET=jwt_secret WCA_LIVE_API_ORIGIN=http://localhost:4000/api WCA_ORIGIN=http://localhost:3000 WCA_CLIENT_ID=example-application-id WCA_CLIENT_SECRET=example-secret   If you don't have WCA server running you can seed the DB with sample data by running  npm run prisma:seed-test   This will also create a user with username admin and password admin, you can use these credentials to login to the admin panel instead of WCA account.  Run backend in development mode  npm run start:dev   The server will be accessible at localhost:5000  Frontend​  Navigate into frontend directory  cd frontend   Install dependencies  npm install   Run development server  npm run dev   Admin panel will be accessible at localhost:5173 ","version":"Next","tagName":"h2"},{"title":"Setup micro-connector","type":0,"sectionRef":"#","url":"/docs/development/micro-connector","content":"Setup micro-connector If you want to use real devices, you have to setup micro-connector for them. You can do it in two ways Using DockerRunning micro-connector directly with Cargo Clone fkm-timer repo and navigate into it git clone https://github.com/filipton/fkm-timer cd fkm-timer ","keywords":"","version":"Next"},{"title":"FKM rev2.0 (standalone device - not display)","type":0,"sectionRef":"#","url":"/docs/assembly-guide/fkm-r2.0-wo-display","content":"","keywords":"","version":"Next"},{"title":"Electronics components​","type":1,"pageTitle":"FKM rev2.0 (standalone device - not display)","url":"/docs/assembly-guide/fkm-r2.0-wo-display#electronics-components","content":" I strongly recommend not buying them on aliexpress (quality of electronics there varies). Im going to link things i bought on TME, so you can buy the exact things i bought.  Shops i recommend:  TMEMouser (expensive delivery options)BotlandDigikey (expensive delivery options)Lcsc (expensive delivery options)  List of required electronics components:  ESP32-WROOM-32E x118650 Cell holder x110uF capacitor x110kOHM resistor x33.3V LDO (AP2111H-3.3TRG1 x1Raster 2.54mm male headers With this one, you can just buy other connector and cables for 2.54mm TP4056 with protection You can buy it whereever, and you can also choose your plug (USB-C, MicroUsb, etc..)    ","version":"Next","tagName":"h2"},{"title":"PCB Board​","type":1,"pageTitle":"FKM rev2.0 (standalone device - not display)","url":"/docs/assembly-guide/fkm-r2.0-wo-display#pcb-board","content":" To connect everything together you need to buy custom PCB's.  I personally prefer JLCPCB, so i'll provide guide only for JLCPCB. Here are the steps:  Get the gerber files You can also generate them yourself, just download KICAD and search for Fabrication Output Upload them on JLCPCB's website and get the quoteUse default settings (2 layers, 1.6 thickness, 1oz copper weight, etc..)Click SAVE TO CART button and then order it  ","version":"Next","tagName":"h2"},{"title":"Panelization​","type":1,"pageTitle":"FKM rev2.0 (standalone device - not display)","url":"/docs/assembly-guide/fkm-r2.0-wo-display#panelization","content":" To order more PCBs for less money you can panelize them using the panelize.sh script located in the pcb directory of the firmware github repo. Running this script will generate Gerber files for panel with 6PCB's. Ordering this will be much cheaper than ordering just one PCB. ","version":"Next","tagName":"h3"},{"title":"Accessing logs","type":0,"sectionRef":"#","url":"/docs/production/accessing-logs","content":"","keywords":"","version":"Next"},{"title":"Dozzle​","type":1,"pageTitle":"Accessing logs","url":"/docs/production/accessing-logs#dozzle","content":" Just click on the logs button on frontend or go to /logs and log in with your logs user.  ","version":"Next","tagName":"h2"},{"title":"Docker logs​","type":1,"pageTitle":"Accessing logs","url":"/docs/production/accessing-logs#docker-logs","content":" You can also access logs with docker logs command. Just run this command in project root:  docker compose logs -f  ","version":"Next","tagName":"h2"},{"title":"Setup for production","type":0,"sectionRef":"#","url":"/docs/production/setup-for-production","content":"","keywords":"","version":"Next"},{"title":"Clone the repository (and navigate into it)​","type":1,"pageTitle":"Setup for production","url":"/docs/production/setup-for-production#clone-the-repository-and-navigate-into-it","content":" git clone https://github.com/FKMTime/FKMTime cd FKMTime   ","version":"Next","tagName":"h2"},{"title":"Environment variables​","type":1,"pageTitle":"Setup for production","url":"/docs/production/setup-for-production#environment-variables","content":" Rename the .env.example file to .env and fill in the required fields.  mv .env.example .env   For now, contact us and we will send you hash, token, proxy and WCA oauth credentials. Server will be running locally, but will be accessible from the internet through our proxy server.  We are using fkm-proxy for proxying requests to the server. You can find more information about it in the repository.  ","version":"Next","tagName":"h2"},{"title":"Logs user​","type":1,"pageTitle":"Setup for production","url":"/docs/production/setup-for-production#logs-user","content":" Generate a password hash for the logs user using the following command:  echo -n 'secret-password' | shasum -a 256   Rename the users-example.yml file to users.yml and paste your hash into &quot;password&quot; field  mv dozzle/users-example.yml dozzle/users.yml   And finally, run the following command to start the server:  docker compose up   This will start backend, micro-connector, database and the frontend. ","version":"Next","tagName":"h2"}],"options":{"id":"default"}}